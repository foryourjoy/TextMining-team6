library(dplyr)
data(women)
women
load(file="ds_salaries_ed.RData")
load("~/Documents/Handong/2024-2/텍스트마이닝/practice/ds_salaries_ed.RData")
load(file=""~/Documents/Handong/2024-2/텍스트마이닝/practice/ds_salaries_ed.RData"")
setwd("~/Documents/Handong/2024-2/TextMining/TextMining-team6")
load("~/Documents/Handong/2024-2/TextMining/TextMining-team6/apple.RData")
load("apple.RData")
apple_df
library(dplyr)
library(tidytext)
ngrams <- df %>%
unnest_tokens(ngram, text_cleaned, token = "ngrams", n = 2)
ngrams <- apple_df$text %>%
unnest_tokens(ngram, text_cleaned, token = "ngrams", n = 2)
ngrams <- apple_df$text %>%
unnest_tokens(ngram,apple_df$text , token = "ngrams", n = 2)
ngrams <- apple_df%>%
unnest_tokens(ngram, text , token = "ngrams", n = 2)
ngrams
ngram_counts <- ngrams %>%
count(ngram, sort = TRUE)
ngram_counts %>% head()
install.packages("tokenizers")
ngram_range <- lapply(1:4, function(n) {
tokenize_ngrams(texts, n = n)
})
library(tokenizers)
ngram_range <- lapply(1:4, function(n) {
tokenize_ngrams(texts, n = n)
})
tokenize_ngrams(apple_df$text, n = n)
library(RWeka)
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 1, max = 4))
apple_ngrams <- Tokenizer(apple_df$text)
# Convert the results to a table for analysis
ngram_table <- table(apple_ngrams)
# Sort by frequency
sorted_ngrams <- sort(ngram_table, decreasing = TRUE)
# View the top results
head(sorted_ngrams)
ngram_df <- as.data.frame(sorted_ngrams, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")
ngram_df
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 2, max = 4))
apple_ngrams <- Tokenizer(apple_df$text)
# Convert the results to a table for analysis
ngram_table <- table(apple_ngrams)
# Sort by frequency
sorted_ngrams <- sort(ngram_table, decreasing = TRUE)
# View the top results
head(sorted_ngrams)
ngram_df <- as.data.frame(sorted_ngrams, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")
ngram_df
library(ggplot2)
ngram_df %>%
top_n(10, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col() +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = "Top 10 N-grams") +
theme_minimal()
library(dplyr)
ngram_df %>%
top_n(10, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col() +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = "Top 10 N-grams") +
theme_minimal()
load("Microsoft.RData")
microsoft <- load("Microsoft.RData")
microsoft_df <- df
microsoft_df
load("dell.RData")
apple_df
dell
dell_df <- dell
dell_df
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
ngram_analysis <- function(data, text_column, min_n = 2, max_n = 4, top_n = 10) {
# Define the tokenizer
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = min_n, max = max_n))
# Extract and clean the text column
text_data <- data[[text_column]]
text_data <- tolower(text_data) %>% gsub("[^a-z\\s]", "", .) # Clean the text
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert to a table for analysis
ngram_table <- table(ngrams)
# Sort by frequency
sorted_ngrams <- sort(ngram_table, decreasing = TRUE)
# Convert to a dataframe
ngram_df <- as.data.frame(sorted_ngrams, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")
# Plot the top n n-grams
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
# Return the results as a list
return(list(
ngram_table = sorted_ngrams,
ngram_df = ngram_df,
plot = plot
))
}
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
ngram_analysis <- function(data, text_column, min_n = 2, max_n = 4, top_n = 10) {
# Define the tokenizer
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = min_n, max = max_n))
# Extract and clean the text column
text_data <- data[[text_column]]
text_data <- tolower(text_data) %>% gsub("[^a-z\\s]", "", .) # Clean the text
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert to a table for analysis
ngram_table <- table(ngrams)
# Sort by frequency
sorted_ngrams <- sort(ngram_table, decreasing = TRUE)
# Convert to a dataframe, ensuring the names are captured correctly
ngram_df <- as.data.frame(sorted_ngrams, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")  # Ensure correct column names
# Plot the top n n-grams
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
# Return the results as a list
return(list(
ngram_table = sorted_ngrams,
ngram_df = ngram_df,
plot = plot
))
}
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
ngram_analysis <- function(data, text_column, min_n = 2, max_n = 4, top_n = 10) {
# Define the tokenizer
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = min_n, max = max_n))
# Extract and clean the text column
text_data <- data[[text_column]]
text_data <- tolower(text_data) %>% gsub("[^a-z\\s]", "", .) # Clean the text
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert the ngrams to a table and ensure proper handling
ngram_table <- table(ngrams)
# Convert table to a data frame and reset the row names
ngram_df <- as.data.frame(ngram_table, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")  # Ensure correct column names
rownames(ngram_df) <- NULL  # Remove row names
# Sort by frequency
ngram_df <- ngram_df %>% arrange(desc(frequency))
# Plot the top n n-grams
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
# Return the results as a list
return(list(
ngram_table = ngram_df,
plot = plot
))
}
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
#### Load data
load("apple.RData")
apple_df
load("Microsoft.RData")
microsoft_df <- df
load("dell.RData")
dell_df <- dell
ngram_analysis <- function(data, text_column, min_n = 2, max_n = 4, top_n = 10) {
# Define the tokenizer
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = min_n, max = max_n))
# Extract and clean the text column
text_data <- data[[text_column]]
text_data <- tolower(text_data) %>% gsub("[^a-z\\s]", "", .) # Clean the text
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert the ngrams to a table and ensure proper handling
ngram_table <- table(ngrams)
# Convert table to a data frame and reset the row names
ngram_df <- as.data.frame(ngram_table, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")  # Ensure correct column names
rownames(ngram_df) <- NULL  # Remove row names
# Sort by frequency
ngram_df <- ngram_df %>% arrange(desc(frequency))
# Plot the top n n-grams
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
# Return the results as a list
return(list(
ngram_table = ngram_df,
plot = plot
))
}
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 2, max = 4)
# Extract and clean the text column
text_data <- apple_df$text
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 2, max = 4))
# Extract and clean the text column
text_data <- apple_df$text
text_data <- tolower(text_data) %>% gsub("[^a-z\\s]", "", .) # Clean the text
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert the ngrams to a table and ensure proper handling
ngram_table <- table(ngrams)
ngram_table
ngrams
text_data
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 2, max = 4))
# Extract and clean the text column
text_data <- apple_df$text
text_data
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert the ngrams to a table and ensure proper handling
ngram_table <- table(ngrams)
ngram_table
# Convert table to a data frame and reset the row names
ngram_df <- as.data.frame(ngram_table, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")  # Ensure correct column names
rownames(ngram_df) <- NULL  # Remove row names
ngram_df
ngram_analysis <- function(data, text_column, min_n = 2, max_n = 4, top_n = 10) {
# Define the tokenizer
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = min_n, max = max_n))
# Extract and clean the text column
text_data <- data[[text_column]]
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert the ngrams to a table and ensure proper handling
ngram_table <- table(ngrams)
# Convert table to a data frame and reset the row names
ngram_df <- as.data.frame(ngram_table, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")  # Ensure correct column names
rownames(ngram_df) <- NULL  # Remove row names
# Sort by frequency
ngram_df <- ngram_df %>% arrange(desc(frequency))
# Plot the top n n-grams
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
# Return the results as a list
return(list(
ngram_table = ngram_df,
plot = plot
))
}
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
# View the dataframe of n-grams and frequencies
head(apple_ngrams$ngram_df)
# View the dataframe of n-grams and frequencies
head(apple_ngrams$plot)
# Sort by frequency
ngram_df <- ngram_df %>% arrange(desc(frequency))
ngram_df
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
ngram_analysis <- function(data, text_column, min_n = 2, max_n = 4, top_n = 10) {
# Define the tokenizer
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = min_n, max = max_n))
# Extract and clean the text column
text_data <- data[[text_column]]
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert to a table for analysis
ngram_table <- table(ngrams)
# Sort by frequency
sorted_ngrams <- sort(ngram_table, decreasing = TRUE)
# Convert to a dataframe
ngram_df <- as.data.frame(sorted_ngrams, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")
# Plot the top n n-grams
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
# Return the results as a list
return(list(
ngram_table = sorted_ngrams,
ngram_df = ngram_df,
plot = plot
))
}
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
apple_ngrams
dell_ngrams <- ngram_analysis(
data = dell_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
dell_ngrams
microsoft_ngrams <- ngram_analysis(
data = dell_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
microsoft_ngrams <- ngram_analysis(
data = microsoft_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
microsoft_ngrams
ngram_analysis <- function(data, text_column, min_n = 2, max_n = 4, top_n = 10) {
# Define the tokenizer
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = min_n, max = max_n))
# Extract and clean the text column
text_data <- data[[text_column]]
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert to a table for analysis
ngram_table <- table(ngrams)
# Sort by frequency
sorted_ngrams <- sort(ngram_table, decreasing = TRUE)
# Convert to a dataframe
ngram_df <- as.data.frame(sorted_ngrams, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")
# Plot the top n n-grams
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
# Return the results as a list
return(list(
ngram_table = sorted_ngrams %>% head(top_n),
ngram_df = ngram_df%>% head(top_n),
plot = plot
))
}
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
apple_ngrams
ngram_analysis <- function(data, text_column, min_n = 2, max_n = 4, top_n = 10) {
# Define the tokenizer
Tokenizer <- function(x) NGramTokenizer(x, Weka_control(min = min_n, max = max_n))
# Extract and clean the text column
text_data <- data[[text_column]]
# Generate n-grams
ngrams <- Tokenizer(text_data)
# Convert to a table for analysis
ngram_table <- table(ngrams)
# Sort by frequency
sorted_ngrams <- sort(ngram_table, decreasing = TRUE)
# Convert to a dataframe
ngram_df <- as.data.frame(sorted_ngrams, stringsAsFactors = FALSE)
colnames(ngram_df) <- c("ngram", "frequency")
# Plot the top n n-grams
plot <- ngram_df %>%
top_n(top_n, frequency) %>%
ggplot(aes(x = reorder(ngram, frequency), y = frequency)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(x = "N-grams", y = "Frequency", title = paste("Top", top_n, "N-grams")) +
theme_minimal()
# Return the results as a list
return(list(
ngram_df = ngram_df%>% head(top_n),
plot = plot
))
}
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
apple_ngrams
dell_ngrams
dell_ngrams <- ngram_analysis(
data = dell_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
dell_ngrams
microsoft_ngrams <- ngram_analysis(
data = microsoft_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
microsoft_ngrams
apple_ngrams <- ngram_analysis(
data = apple_df,
text_column = "text",
min_n = 2,
max_n = 4,
top_n = 20
)
apple_ngrams
dell_ngrams
microsoft_ngrams
dell_df
microsoft_ngrams
microsoft_ngrams$ngram_df
load("ESGterm.Rdata")
esg_terms_df
joined_df <- esg_terms_df %>%
left_join(microsoft_ngrams_df, by = c("word" = "ngram"))
microsoft_ngrams$ngram_df
joined_df <- esg_terms_df %>%
left_join(microsoft_ngrams, by = c("word" = "ngram"))
esg_terms_df
joined_df <- esg_terms_df %>%
left_join(microsoft_ngrams, by = c("word" = "ngram"))
joined_df <- esg_terms_df %>%
left_join(microsoft_ngrams, by = c("word" = "ngram"), copy = TRUE)
esg_terms_df %>%
left_join(microsoft_ngrams, by = c("word" = "ngram"))
microsoft_ngrams_df <- microsoft_ngrams$ngram_df
# Now perform the left join
joined_df <- esg_terms_df %>%
left_join(microsoft_ngrams_df, by = c("word" = "ngram"))
# View the result
print(joined_df)
# Now perform the left join
joined_df <- microsoft_ngrams_df %>%
left_join(esg_terms_df, by = c("word" = "ngram"))
# Now perform the left join
joined_df <- microsoft_ngrams_df %>%
left_join(esg_terms_df, by = c("ngram" = "word"))
# View the result
print(joined_df)
